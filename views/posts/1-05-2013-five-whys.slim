article
  p
    | I'm a consultant. I get assigned to projects where I don't get to choose the tech stack, I don't get to choose the domain, I don't get to choose the people I'll be working with. I get assigned to projects that need to be delivered, and I have to help them delivering regardless the tech stack, the domain or the people I'm working with. 
  p
    | No matter how hard is the situation at a particular project, I'll learn the tech stack and, eventually, I'll learn the domain. But if you are a consultant, you probably know that the hard part to solve in this equation is the people. You have to work with whom you have to work with, period. My friend 
    a href="http://marcovaltas.com"
      | Marco Valtas 
    | says that "We have to assume that the people we will be working with is the only thing in a project that won't change, so deal with it". I say the same.
  p
    | I'm an agile consultant, and I have been taught that, when we face a problem, we should ask 5 whys. The build is always broken- why? Becuase the tests are flaky- why? Because the tests are not well written- why? Because they are testing the wrong things in the wrong testing level- why? Because the team don't know about the test pyramid- why? Because the hiring process isn't as good as it could be.
  p
    | OK, we have the root cause. Now what do we do with it? Let's go talk to whoever is on charge of hiring decisions and tell them to raise the bar. Truth is, chances of that working are very small. You don't know this person- your influence over them won't be enough. You could create some friction there too- "Are you saying are people are bad?".
  p
    | The chances of solving a problem your client has, you being the consultant, will get smaller as you approach the root cause. The root cause is bigger than you. The root cause is, most of the times, 
    em someone.
  p
    | It is people, the immutable variable of a consultancy gig. That you won't fix.
  p
    | You have to break the chains of "whys". You have to find a point of inflection where you can, with cirurgical skills, propose/implement a solution in one of the why levels that will then bubble up and solve your initial problem.
